<?php

namespace MyApp\ApBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ClientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClientRepository extends EntityRepository
{
    
public function getAllClientsByFranchise($user)
  {
 
$qb = $this->createQueryBuilder('a')
                  ->join('a.city', 'c')           
                  ->where("a.user LIKE :user ")
                  ->setParameter('user', $user)    
                  ->orderBy('a.id', 'DESC');

    $qb = $this->whereCurrentYear($qb);

    return $qb->getQuery()
              ->getResult();
  }

public function getAllClientsByFranchiseCount($user)
  {
 
$qb = $this->createQueryBuilder('a')
                  ->select('COUNT(a.id)')
                  ->join('a.city', 'c')           
                  ->where("a.user LIKE :user ")
                  ->setParameter('user', $user)    
                  ->orderBy('a.id', 'DESC');

    $qb = $this->whereCurrentYear($qb);

    return $qb->getQuery()
              ->getResult();
  }

public function getAllClientsByFranchiseCountWeek($user)
  {
 
$qb = $this->createQueryBuilder('a')
                  ->select('COUNT(a.id)')
                  ->join('a.city', 'c')           
                  ->where("a.user LIKE :user ")
                  ->setParameter('user', $user)    
                  ->orderBy('a.id', 'DESC');

    $qb = $this->whereCurrentWeek($qb);

    return $qb->getQuery()
              ->getResult();
  }

public function getAllClientsByFranchiseCountMonth($user)
  {
    $qb = $this->createQueryBuilder('a')
                      ->select('COUNT(a.id)')
                      ->join('a.city', 'c')           
                      ->where("a.user LIKE :user ")
                      ->setParameter('user', $user)    
                      ->orderBy('a.id', 'DESC');

        $qb = $this->whereCurrentMonth($qb);

        return $qb->getQuery()
                  ->getResult();
  }

public function whereCurrentYear(\Doctrine\ORM\QueryBuilder $qb)
{
  $qb->andWhere('a.created BETWEEN :debut AND :fin')
      ->setParameter('debut', new \Datetime(date('Y').'-01-01'))  
      ->setParameter('fin',   new \Datetime(date('Y').'-12-31')); 
 
    return $qb;
}

public function whereCurrentWeek(\Doctrine\ORM\QueryBuilder $qb)
{
  $qb->andWhere('a.created BETWEEN :debut AND :fin')
      ->setParameter('debut', new \Datetime(date('Y-m-d', strtotime("-7 days"))))
      ->setParameter('fin',   new \Datetime(date('Y').'-12-31'));
 
    return $qb;
}

public function whereCurrentMonth(\Doctrine\ORM\QueryBuilder $qb)
{
  $qb->andWhere('a.created BETWEEN :debut AND :fin')
      ->setParameter('debut', new \Datetime(date('Y-m-d', strtotime("-30 days")))) 
      ->setParameter('fin',   new \Datetime(date('Y').'-12-31')); 
 
    return $qb;
}

  public function myFindNextClient()
    {
$qb = $this ->_em->createQueryBuilder();
    $qb->select('a')
     ->from('MyAppApBundle:Client', 'a');
 
    return $qb->getQuery()
              ->getResult();
    }
    public function myFindNextClientEtat($etat)
    {
$qb = $this->createQueryBuilder('a');
    $qb->where('a.etat = :etat')
      ->setParameter('etat', $etat);

 
    return $qb->getQuery()
              ->getResult();
    }
}



