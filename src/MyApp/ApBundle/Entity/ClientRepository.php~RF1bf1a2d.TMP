<?php

namespace MyApp\ApBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ClientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClientRepository extends EntityRepository
{
    
public function getAllClientsByFranchiseCount($username)
  {
 
$qb = $this->createQueryBuilder('a')
                  ->select('COUNT(a.id)')
                  ->join('a.city', 'c')           
                  ->where("a.user LIKE :user ")
                  ->setParameter('user', $username)    
                  ->orderBy('a.id', 'DESC');

    $qb = $this->whereCurrentYear($qb);

    return $qb->getQuery()
              ->getResult();
  }

public function getAllClientsByFranchiseCountWeek($username)
  {
 
$qb = $this->createQueryBuilder('a')
                  ->select('COUNT(a.id)')
                  ->join('a.city', 'c')           
                  ->where("a.user LIKE :user ")
                  ->setParameter('user', $username)    
                  ->orderBy('a.id', 'DESC');

    $qb = $this->whereCurrentWeek($qb);

    return $qb->getQuery()
              ->getResult();
  }

public function whereCurrentYear(\Doctrine\ORM\QueryBuilder $qb)
{
  $qb->andWhere('a.updated BETWEEN :debut AND :fin')
      ->setParameter('debut', new \Datetime(date('Y').'-08-01'))  // Date entre le 1er janvier de cette année
      ->setParameter('fin',   new \Datetime(date('Y').'-12-31')); // Et le 31 décembre de cette année
 
    return $qb;
}

public function whereCurrentWeek(\Doctrine\ORM\QueryBuilder $qb)
{
  $qb->andWhere('a.updated BETWEEN :debut AND :fin')
      ->setParameter('debut', new \Datetime(date('Y').'-'date('Y')'-01'))  // Date entre le 1er janvier de cette année
      ->setParameter('fin',   new \Datetime(date('Y').'-12-31')); // Et le 31 décembre de cette année
 
    return $qb;
}

  public function myFindNextClient()
    {
$qb = $this ->_em->createQueryBuilder();
    $qb->select('a')
     ->from('MyAppApBundle:Client', 'a');
 
    return $qb->getQuery()
              ->getResult();
    }
    public function myFindNextClientEtat($etat)
    {
$qb = $this->createQueryBuilder('a');
    $qb->where('a.etat = :etat')
      ->setParameter('etat', $etat);

 
    return $qb->getQuery()
              ->getResult();
    }
}



